PROCEDURE dot_product(v1:ARRAY_OF FOLAT, var v2:ARRAY_OF FLOAT)
VAR
    ps:FOLAT; n:intger
    i:intger
BEGIN
  FOR i FROM 1 TO M  DO
   ps = ps + v1[i] * v2[i];  
END
ALGORITHM Dot product
VAR
product:intger
   Set1 : ARRAY_OF INTEGER;
    Set2 : ARRAY_OF INTEGER;
    n:INTEGER
BEGIN
    read(n)
   FOR i FROM 0 TO n-1  DO
   {
   read(v1[i])
   }
   FOR i FROM 0 TO n-1  DO{
   read(v2[i]) 
   }
    dot_product(v1,v2)
    if(product=0){
        
        write("the two vectors of given IR are orthogonal")
    }
    ELSE
    write("the two vectors of given IR are not orthogonal")
END

FUNCTION dot_product(v1,v2) :intger
VAR
   product.intger
BEGIN
     FOR i FROM 1 TO M  DO
   product = product + v1[i] * v2[i]; 
    RETURN (product) ;
END
ALGORITHM Dot product
VAR
product:intger
   Set1 : ARRAY_OF INTEGER;
    Set2 : ARRAY_OF INTEGER;
    n:INTEGER
BEGIN
    read(n)
   FOR i FROM 0 TO n-1  DO
   {
   read(v1[i])
   }
   FOR i FROM 0 TO n-1  DO{
   read(v2[i]) 
   }
  
    if(dot_product=0)
    {
        
        write("the two vectors of given IR are orthogonal")
    }
    ELSE
    write("the two vectors of given IR are not orthogonal")
END
